<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SysContractMapper">
    
    <resultMap type="SysContract" id="SysContractResult">
        <result property="contractId"    column="contract_id"    />
        <result property="contractName"    column="contract_name"    />
        <result property="contractNumber"    column="contract_number"    />
        <result property="contractCus"    column="contract_cus"    />
        <result property="contractSign"    column="contract_sign"    />
        <result property="confirmDate"    column="confirm_date"    />
        <result property="exceedMonth"    column="exceed_month"    />
        <result property="receiptContext"    column="receipt_context"    />
        <result property="receiptDate"    column="receipt_date"    />
        <result property="tax"    column="tax"    />
        <result property="contractContext"    column="contract_context"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <resultMap id="SysContractSysPaymentResult" type="SysContract" extends="SysContractResult">
        <collection property="sysPaymentList" notNullColumn="sub_contract_id" javaType="java.util.List" resultMap="SysPaymentResult" />
    </resultMap>

    <resultMap type="SysPayment" id="SysPaymentResult">
        <result property="contractId"    column="sub_contract_id"    />
        <result property="readyDate"    column="sub_ready_date"    />
        <result property="readyPayment"    column="sub_ready_payment"    />
        <result property="actualDate"    column="sub_actual_date"    />
        <result property="actualPayment"    column="sub_actual_payment"    />
    </resultMap>

    <sql id="selectSysContractVo">
        select contract_id, contract_name, contract_number, contract_cus, contract_sign, confirm_date, exceed_month, receipt_context, receipt_date, tax, contract_context, remark from sys_contract
    </sql>

    <select id="selectSysContractList" parameterType="SysContract" resultMap="SysContractResult">
        <include refid="selectSysContractVo"/>
        <where>  
            <if test="contractName != null  and contractName != ''"> and contract_name like concat('%', #{contractName}, '%')</if>
            <if test="contractNumber != null  and contractNumber != ''"> and contract_number = #{contractNumber}</if>
            <if test="contractCus != null  and contractCus != ''"> and contract_cus = #{contractCus}</if>
            <if test="contractSign != null  and contractSign != ''"> and contract_sign = #{contractSign}</if>
            <if test="confirmDate != null "> and confirm_date = #{confirmDate}</if>
            <if test="exceedMonth != null "> and exceed_month = #{exceedMonth}</if>
            <if test="receiptContext != null "> and receipt_context = #{receiptContext}</if>
            <if test="receiptDate != null "> and receipt_date = #{receiptDate}</if>
            <if test="tax != null "> and tax = #{tax}</if>
            <if test="contractContext != null "> and contract_context = #{contractContext}</if>
        </where>
    </select>
    
    <select id="selectSysContractByContractId" parameterType="Long" resultMap="SysContractSysPaymentResult">
        select a.contract_id, a.contract_name, a.contract_number, a.contract_cus, a.contract_sign, a.confirm_date, a.exceed_month, a.receipt_context, a.receipt_date, a.tax, a.contract_context, a.remark,
 b.contract_id as sub_contract_id, b.ready_date as sub_ready_date, b.ready_payment as sub_ready_payment, b.actual_date as sub_actual_date, b.actual_payment as sub_actual_payment
        from sys_contract a
        left join sys_payment b on b.contract_id = a.contract_id
        where a.contract_id = #{contractId}
    </select>
        
    <insert id="insertSysContract" parameterType="SysContract" useGeneratedKeys="true" keyProperty="contractId">
        insert into sys_contract
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="contractName != null">contract_name,</if>
            <if test="contractNumber != null">contract_number,</if>
            <if test="contractCus != null">contract_cus,</if>
            <if test="contractSign != null">contract_sign,</if>
            <if test="confirmDate != null">confirm_date,</if>
            <if test="exceedMonth != null">exceed_month,</if>
            <if test="receiptContext != null">receipt_context,</if>
            <if test="receiptDate != null">receipt_date,</if>
            <if test="tax != null">tax,</if>
            <if test="contractContext != null">contract_context,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="contractName != null">#{contractName},</if>
            <if test="contractNumber != null">#{contractNumber},</if>
            <if test="contractCus != null">#{contractCus},</if>
            <if test="contractSign != null">#{contractSign},</if>
            <if test="confirmDate != null">#{confirmDate},</if>
            <if test="exceedMonth != null">#{exceedMonth},</if>
            <if test="receiptContext != null">#{receiptContext},</if>
            <if test="receiptDate != null">#{receiptDate},</if>
            <if test="tax != null">#{tax},</if>
            <if test="contractContext != null">#{contractContext},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateSysContract" parameterType="SysContract">
        update sys_contract
        <trim prefix="SET" suffixOverrides=",">
            <if test="contractName != null">contract_name = #{contractName},</if>
            <if test="contractNumber != null">contract_number = #{contractNumber},</if>
            <if test="contractCus != null">contract_cus = #{contractCus},</if>
            <if test="contractSign != null">contract_sign = #{contractSign},</if>
            <if test="confirmDate != null">confirm_date = #{confirmDate},</if>
            <if test="exceedMonth != null">exceed_month = #{exceedMonth},</if>
            <if test="receiptContext != null">receipt_context = #{receiptContext},</if>
            <if test="receiptDate != null">receipt_date = #{receiptDate},</if>
            <if test="tax != null">tax = #{tax},</if>
            <if test="contractContext != null">contract_context = #{contractContext},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where contract_id = #{contractId}
    </update>

    <delete id="deleteSysContractByContractId" parameterType="Long">
        delete from sys_contract where contract_id = #{contractId}
    </delete>

    <delete id="deleteSysContractByContractIds" parameterType="String">
        delete from sys_contract where contract_id in 
        <foreach item="contractId" collection="array" open="(" separator="," close=")">
            #{contractId}
        </foreach>
    </delete>
    
    <delete id="deleteSysPaymentByContractIds" parameterType="String">
        delete from sys_payment where contract_id in 
        <foreach item="contractId" collection="array" open="(" separator="," close=")">
            #{contractId}
        </foreach>
    </delete>

    <delete id="deleteSysPaymentByContractId" parameterType="Long">
        delete from sys_payment where contract_id = #{contractId}
    </delete>

    <insert id="batchSysPayment">
        insert into sys_payment( contract_id, ready_date, ready_payment, actual_date, actual_payment) values
		<foreach item="item" index="index" collection="list" separator=",">
            ( #{item.contractId}, #{item.readyDate}, #{item.readyPayment}, #{item.actualDate}, #{item.actualPayment})
        </foreach>
    </insert>

</mapper>